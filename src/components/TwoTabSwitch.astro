---
const props = Astro.props
---

<tab-switch>
	<div class='flex justify-between'>
		<div class='tabs tabs-boxed'>
			<div class='tab tab-active'>{props.one}</div>
			<div class='tab'>{props.two}</div>
		</div>
		<svg
			class='pr-1'
			xmlns='http://www.w3.org/2000/svg'
			width='24'
			height='24'
			viewBox='0 0 24 24'
			fill='none'
			stroke='currentColor'
			stroke-width='2'
			stroke-linecap='round'
			stroke-linejoin='round'
			><rect x='9' y='9' width='13' height='13' rx='2' ry='2'></rect><path
				d='M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1'
			></path></svg
		>
	</div>
	<div class='tab-content'>
		<slot name='tab1' />
	</div>
	<div class='hidden tab-content'>
		<slot name='tab2' />
	</div>
</tab-switch>
<script>
	class TabSwitch extends HTMLElement {
		constructor() {
			super()

			const tabs = this.querySelectorAll('.tab')
			const tabContents = this.querySelectorAll('.tab-content')

			tabs.forEach((tab, index) => {
				tab.addEventListener('click', () => {
					tabs.forEach((tab, i) => {
						if (index === i) {
							tabContents[i].classList.remove('hidden')
							if (!tab.classList.contains('tab-active')) {
								tab.classList.add('tab-active')
							}
						} else {
							if (!tabContents[i].classList.contains('hidden')) {
								tabContents[i].classList.add('hidden')
							}
							if (tab.classList.contains('tab-active')) {
								tab.classList.remove('tab-active')
							}
						}
					})
				})
			})
		}
	}

	customElements.define('tab-switch', TabSwitch)
</script>
