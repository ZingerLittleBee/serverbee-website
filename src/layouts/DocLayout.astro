---
import Footer from '@components/Footer/Footer.astro'
import HeadCommon from '@components/HeadCommon.astro'
import HeadSEO from '@components/HeadSEO.astro'
import Header from '@components/Header/Header.astro'
import LeftSidebar from '@components/LeftSidebar/LeftSidebar.astro'
import PageContent from '@components/PageContent/PageContent.astro'
import RightSidebar from '@components/RightSidebar/RightSidebar.astro'
import type { MarkdownHeading } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { GITHUB_EDIT_URL, SITE } from '../consts'

type Props = CollectionEntry<'docs'>['data'] & {
	headings: MarkdownHeading[]
}

const { headings, ...data } = Astro.props
const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const currentPage = Astro.url.pathname
const currentFile = `src/content/docs${currentPage.replace(/\/$/, '')}.md`
const githubEditUrl = `${GITHUB_EDIT_URL}/${currentFile}`
---

<html dir={data.dir} lang={data.lang} class='initial'>
	<HeadCommon />
	<HeadSEO {...data} canonicalUrl={canonicalURL} />
	<title>
		{`${data.title} ðŸš€ ${SITE.title}`}
	</title>
	<style>
		body {
			width: 100%;
			display: grid;
			grid-template-rows: var(--theme-navbar-height) 1fr;
			--gutter: 0.5rem;
			--doc-padding: 2rem;
		}

		.layout {
			display: grid;
			grid-auto-flow: column;
			grid-template-columns:
				minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
				minmax(var(--gutter), 1fr);
			overflow-x: hidden;
		}

		.grid-sidebar {
			height: 100vh;
			position: sticky;
			top: 0;
			padding: 0;
		}

		#grid-left {
			position: fixed;
			background-color: var(--theme-bg);
			z-index: 10;
			display: none;
		}

		#grid-main {
			padding: var(--doc-padding) var(--gutter);
			grid-column: 2;
			display: flex;
			flex-direction: column;
			height: 100%;
		}

		#grid-right {
			display: none;
		}

		@media (min-width: 50em) {
			.layout {
				overflow: initial;
				grid-template-columns: 20rem minmax(0, var(--max-width));
				gap: 1em;
			}

			#grid-left {
				display: flex;
				padding-left: 2rem;
				position: sticky;
				grid-column: 1;
			}
		}

		@media (min-width: 72em) {
			.layout {
				grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
				padding-left: 0;
				padding-right: 0;
				margin: 0 auto;
			}

			#grid-right {
				grid-column: 3;
				display: flex;
			}
		}
	</style>
	<style is:global>
		.layout > * {
			width: 100%;
			height: 100%;
		}

		.mobile-sidebar-toggle {
			overflow: hidden;
		}

		.mobile-sidebar-toggle #grid-left {
			display: block;
			top: 2rem;
		}
	</style>

	<body>
		<Header currentPage={currentPage} />
		<main class='layout'>
			<aside id='grid-left' class='grid-sidebar' title='Site Navigation'>
				<LeftSidebar currentPage={currentPage} />
			</aside>
			<div id='grid-main'>
				<PageContent
					title={data.title}
					headings={headings}
					githubEditUrl={githubEditUrl}
				>
					<slot />
				</PageContent>
			</div>
			<aside
				id='grid-right'
				class='grid-sidebar'
				title='Table of Contents'
			>
				<RightSidebar
					headings={headings}
					githubEditUrl={githubEditUrl}
				/>
			</aside>
		</main>
		<Footer path={currentFile} />
		<style is:global>
			.astro-code .code-copy {
				position: absolute;
				left: calc(100% - 40px);
				margin-right: -20px;
				margin-bottom: -30px;
				opacity: 0.75;
				cursor: pointer;
				transition: opacity 0.2s ease-in-out;
			}
			.astro-code .code-copy:hover {
				opacity: 1;
			}
			.astro-code .code-copy.copied {
				left: calc(100% - 70px);
				opacity: 1;
			}
		</style>
		<!-- <script>
			const successIconHtml = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path></svg>`
			const copyIconHtml = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>`

			function handleCopyClick(e: MouseEvent) {
				const target = e.target as HTMLButtonElement & {
					_timerId: NodeJS.Timeout
				}
				let copyText = target
					.closest('pre')
					?.querySelector('code')?.innerText

				if (!copyText) return

				navigator.clipboard.writeText(copyText)
				target.classList.add('copied')
				// target.innerText = 'Copied!'
				target.innerHTML = successIconHtml

				if (target._timerId) {
					clearTimeout(target._timerId)
				}
				target._timerId = setTimeout(() => {
					target.innerHTML = copyIconHtml
					target.classList.remove('copied')
				}, 2000)
			}

			const codeBlocks = document.querySelectorAll('pre.astro-code')

			codeBlocks.forEach(div => {
				const copy = document.createElement('div')
				copy.innerHTML = copyIconHtml
				copy.classList.add('code-copy')
				copy.addEventListener('click', handleCopyClick)
				div.prepend(copy)
			})
		</script> -->
	</body>
</html>
